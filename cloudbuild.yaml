steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_ARTIFACT_REGISTRY_REPOSITORY}/${_SERVICE_NAME}", "./alteredbuilder/"]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_ARTIFACT_REGISTRY_REPOSITORY}/${_SERVICE_NAME}"]

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "${_ARTIFACT_REGISTRY_REPOSITORY}/${_SERVICE_NAME}",
        "-s",
        "${_CLOUD_SQL_CONNECTION_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]

  - id: "collect static"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "${_ARTIFACT_REGISTRY_REPOSITORY}/${_SERVICE_NAME}",
        "-s",
        "${_CLOUD_SQL_CONNECTION_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "-e",
        "USE_GCS_STATICS=True",
        "--",
        "python",
        "manage.py",
        "collectstatic",
        "--no-input",
      ]

  - id: "deploy application"
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: 
      [
        'run', 'deploy', '${_SERVICE_NAME}',
        '--image', '${_ARTIFACT_REGISTRY_REPOSITORY}/${_SERVICE_NAME}',
        '--region', '${_REGION}',
        '--platform', 'managed',
        '--port', '8000',
        '--add-cloudsql-instances', '${_CLOUD_SQL_CONNECTION_NAME}',
        '--allow-unauthenticated',
        '--service-account', '${_CLOUD_RUN_SA}',
        '--cpu', '1000m',
        '--memory', '256Mi',
      ]

images:
  - "${_ARTIFACT_REGISTRY_REPOSITORY}/${_SERVICE_NAME}"

options:
  logging: CLOUD_LOGGING_ONLY
